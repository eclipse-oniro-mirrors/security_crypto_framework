# Copyright (C) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/crypto_framework/common/common.gni")
import("//base/security/crypto_framework/frameworks/frameworks.gni")
import("//base/security/crypto_framework/plugin/plugin.gni")
import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")

ohos_shared_library("crypto_framework_ani") {
  branch_protector_ret = "pac_ret"
  if (os_level == "standard") {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
  }

  cflags = [
    "-Wall",
    "-Werror",
    "-fPIC",
    "-DHILOG_ENABLE",
  ]

  subsystem_name = "security"
  part_name = "crypto_framework"

  include_dirs = framework_inc_path
  sources = crypto_framwork_common_files + plugin_files + framework_key_files +
            framework_mac_files
  sources += [ "./src/cryptoframework_ani.cpp" ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "hilog:libhilog",
    "openssl:libcrypto_shared",
    "runtime_core:ani",
  ]
}

generate_static_abc("crypto_framework_abc") {
  arktsconfig = "$base_path/ani/arktsconfig.json"
  dst_file = "$target_out_dir/crypto_framework.abc"
  out_puts = [ "$target_out_dir/crypto_framework.abc" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/crypto_framework.abc"
  cache_path = "$target_out_dir/cache"
}

ohos_prebuilt_etc("crypto_framework_abc_etc") {
  source = "$target_out_dir/crypto_framework.abc"
  module_install_dir = "framework"
  subsystem_name = "security"
  part_name = "crypto_framework"
  deps = [ ":crypto_framework_abc" ]
}

group("ani_crypto_framework") {
  deps = [
    ":crypto_framework_abc_etc",
    ":crypto_framework_ani",
  ]
}
